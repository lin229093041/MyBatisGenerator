<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rony.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.rony.pojo.Course">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="courseName" jdbcType="VARCHAR" property="coursename" />
    <result column="teacherID" jdbcType="INTEGER" property="teacherid" />
    <result column="courseTime" jdbcType="VARCHAR" property="coursetime" />
    <result column="classRoom" jdbcType="VARCHAR" property="classroom" />
    <result column="courseWeek" jdbcType="INTEGER" property="courseweek" />
    <result column="courseType" jdbcType="VARCHAR" property="coursetype" />
    <result column="score" jdbcType="REAL" property="score" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, courseName, teacherID, courseTime, classRoom, courseWeek, courseType, score
  </sql>
  <select id="selectByExample" parameterType="com.rony.pojo.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rony.pojo.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rony.pojo.Course">
    insert into course (Id, courseName, teacherID, 
      courseTime, classRoom, courseWeek, 
      courseType, score)
    values (#{id,jdbcType=INTEGER}, #{coursename,jdbcType=VARCHAR}, #{teacherid,jdbcType=INTEGER}, 
      #{coursetime,jdbcType=VARCHAR}, #{classroom,jdbcType=VARCHAR}, #{courseweek,jdbcType=INTEGER}, 
      #{coursetype,jdbcType=VARCHAR}, #{score,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.rony.pojo.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="coursename != null">
        courseName,
      </if>
      <if test="teacherid != null">
        teacherID,
      </if>
      <if test="coursetime != null">
        courseTime,
      </if>
      <if test="classroom != null">
        classRoom,
      </if>
      <if test="courseweek != null">
        courseWeek,
      </if>
      <if test="coursetype != null">
        courseType,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="coursename != null">
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="teacherid != null">
        #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="coursetime != null">
        #{coursetime,jdbcType=VARCHAR},
      </if>
      <if test="classroom != null">
        #{classroom,jdbcType=VARCHAR},
      </if>
      <if test="courseweek != null">
        #{courseweek,jdbcType=INTEGER},
      </if>
      <if test="coursetype != null">
        #{coursetype,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rony.pojo.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.coursename != null">
        courseName = #{record.coursename,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherid != null">
        teacherID = #{record.teacherid,jdbcType=INTEGER},
      </if>
      <if test="record.coursetime != null">
        courseTime = #{record.coursetime,jdbcType=VARCHAR},
      </if>
      <if test="record.classroom != null">
        classRoom = #{record.classroom,jdbcType=VARCHAR},
      </if>
      <if test="record.courseweek != null">
        courseWeek = #{record.courseweek,jdbcType=INTEGER},
      </if>
      <if test="record.coursetype != null">
        courseType = #{record.coursetype,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set Id = #{record.id,jdbcType=INTEGER},
      courseName = #{record.coursename,jdbcType=VARCHAR},
      teacherID = #{record.teacherid,jdbcType=INTEGER},
      courseTime = #{record.coursetime,jdbcType=VARCHAR},
      classRoom = #{record.classroom,jdbcType=VARCHAR},
      courseWeek = #{record.courseweek,jdbcType=INTEGER},
      courseType = #{record.coursetype,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=REAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rony.pojo.Course">
    update course
    <set>
      <if test="coursename != null">
        courseName = #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="teacherid != null">
        teacherID = #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="coursetime != null">
        courseTime = #{coursetime,jdbcType=VARCHAR},
      </if>
      <if test="classroom != null">
        classRoom = #{classroom,jdbcType=VARCHAR},
      </if>
      <if test="courseweek != null">
        courseWeek = #{courseweek,jdbcType=INTEGER},
      </if>
      <if test="coursetype != null">
        courseType = #{coursetype,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=REAL},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rony.pojo.Course">
    update course
    set courseName = #{coursename,jdbcType=VARCHAR},
      teacherID = #{teacherid,jdbcType=INTEGER},
      courseTime = #{coursetime,jdbcType=VARCHAR},
      classRoom = #{classroom,jdbcType=VARCHAR},
      courseWeek = #{courseweek,jdbcType=INTEGER},
      courseType = #{coursetype,jdbcType=VARCHAR},
      score = #{score,jdbcType=REAL}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.rony.pojo.Course">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="courseName" jdbcType="VARCHAR" property="coursename" />
    <result column="teacherID" jdbcType="INTEGER" property="teacherid" />
    <result column="courseTime" jdbcType="VARCHAR" property="coursetime" />
    <result column="classRoom" jdbcType="VARCHAR" property="classroom" />
    <result column="courseWeek" jdbcType="INTEGER" property="courseweek" />
    <result column="courseType" jdbcType="VARCHAR" property="coursetype" />
    <result column="score" jdbcType="REAL" property="score" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, courseName, teacherID, courseTime, classRoom, courseWeek, courseType, score
  </sql>
  <select id="selectByExample" parameterType="com.rony.pojo.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rony.pojo.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rony.pojo.Course">
    insert into course (Id, courseName, teacherID, 
      courseTime, classRoom, courseWeek, 
      courseType, score)
    values (#{id,jdbcType=INTEGER}, #{coursename,jdbcType=VARCHAR}, #{teacherid,jdbcType=INTEGER}, 
      #{coursetime,jdbcType=VARCHAR}, #{classroom,jdbcType=VARCHAR}, #{courseweek,jdbcType=INTEGER}, 
      #{coursetype,jdbcType=VARCHAR}, #{score,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.rony.pojo.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="coursename != null">
        courseName,
      </if>
      <if test="teacherid != null">
        teacherID,
      </if>
      <if test="coursetime != null">
        courseTime,
      </if>
      <if test="classroom != null">
        classRoom,
      </if>
      <if test="courseweek != null">
        courseWeek,
      </if>
      <if test="coursetype != null">
        courseType,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="coursename != null">
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="teacherid != null">
        #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="coursetime != null">
        #{coursetime,jdbcType=VARCHAR},
      </if>
      <if test="classroom != null">
        #{classroom,jdbcType=VARCHAR},
      </if>
      <if test="courseweek != null">
        #{courseweek,jdbcType=INTEGER},
      </if>
      <if test="coursetype != null">
        #{coursetype,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rony.pojo.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.coursename != null">
        courseName = #{record.coursename,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherid != null">
        teacherID = #{record.teacherid,jdbcType=INTEGER},
      </if>
      <if test="record.coursetime != null">
        courseTime = #{record.coursetime,jdbcType=VARCHAR},
      </if>
      <if test="record.classroom != null">
        classRoom = #{record.classroom,jdbcType=VARCHAR},
      </if>
      <if test="record.courseweek != null">
        courseWeek = #{record.courseweek,jdbcType=INTEGER},
      </if>
      <if test="record.coursetype != null">
        courseType = #{record.coursetype,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set Id = #{record.id,jdbcType=INTEGER},
      courseName = #{record.coursename,jdbcType=VARCHAR},
      teacherID = #{record.teacherid,jdbcType=INTEGER},
      courseTime = #{record.coursetime,jdbcType=VARCHAR},
      classRoom = #{record.classroom,jdbcType=VARCHAR},
      courseWeek = #{record.courseweek,jdbcType=INTEGER},
      courseType = #{record.coursetype,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=REAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rony.pojo.Course">
    update course
    <set>
      <if test="coursename != null">
        courseName = #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="teacherid != null">
        teacherID = #{teacherid,jdbcType=INTEGER},
      </if>
      <if test="coursetime != null">
        courseTime = #{coursetime,jdbcType=VARCHAR},
      </if>
      <if test="classroom != null">
        classRoom = #{classroom,jdbcType=VARCHAR},
      </if>
      <if test="courseweek != null">
        courseWeek = #{courseweek,jdbcType=INTEGER},
      </if>
      <if test="coursetype != null">
        courseType = #{coursetype,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=REAL},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rony.pojo.Course">
    update course
    set courseName = #{coursename,jdbcType=VARCHAR},
      teacherID = #{teacherid,jdbcType=INTEGER},
      courseTime = #{coursetime,jdbcType=VARCHAR},
      classRoom = #{classroom,jdbcType=VARCHAR},
      courseWeek = #{courseweek,jdbcType=INTEGER},
      courseType = #{coursetype,jdbcType=VARCHAR},
      score = #{score,jdbcType=REAL}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>